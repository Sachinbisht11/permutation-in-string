class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int n = nums.length;
        int[] res = new int[n];
        Arrays.fill(res, -1); // Default: if no greater element, answer is -1
        Stack<Integer> stack = new Stack<>(); // stores indices

        // Loop twice to handle circular nature
        for (int i = 0; i < 2 * n; i++) {
            int num = nums[i % n]; // circular access
            while (!stack.isEmpty() && nums[stack.peek()] < num) {
                res[stack.pop()] = num;
            }
            if (i < n) { // Only push first round
                stack.push(i);
            }
        }
        return res;
    }
}
